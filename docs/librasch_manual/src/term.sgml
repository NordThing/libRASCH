<chapter id="concept-terminology"><title>Concepts and Terminology</title>

<para>
This section gives a short overview about the concepts and terminology
used in the manual.
<para>

<section id="general-librasch-struct"><title>General Structure of libRASCH</title>
<para>
<xref linkend="librasch-struct-fig"> shows the operational area of
libRASCH. Programs from User-space will call libRASCH to access
measurements stored in files, to display signals on the screen and to
process the signal. In the following "User-space" means all programs,
which use the external interface of libRASCH (the API of libRASCH). Also
programs like Matlab or Octave, for which an interface is available,
are user-space programs (and the scripts used in this
programs). "Library-space" describes the internal interfaces used in
libRASCH. And "Filesystem" describes the real files used to store the
measurement data on disk.
</para>

<figure id="librasch-struct-fig">
<title>
Structure of libRASCH.
</title>
<mediaobject>
<imageobject>
<imagedata fileref="pics/librasch_struct.png" scale="40">
</imageobject>
</mediaobject>
</figure>
</section>

<section id="terminology"><title>Terminology</title>

<variablelist>
<varlistentry><term>Measurement</term>
<listitem>
<para>
A measurement is the topmost object in libRASCH. Measurements
consists of one or more sessions, information about the measurement
object (e.g. name, forename and birthday if the measurement object is
a person) and zero or more evaluations.
</para>
</listitem>
</varlistentry>


<varlistentry><term>Session</term>
<listitem>
<para>
A Session is a recording for a specific time interval without any
interruptions during this time interval. In a measurement can be more
than one session, but the layout of the recording (see below)
must not be changed.
</para>
</listitem>
</varlistentry>


<varlistentry><term>Recording</term>
<listitem>
<para>
A recording contains the measured data (e.g. ecg-leads V1-V6). A
recording has one or more channels or two or more
sub-recordings. Sub-recordings are used if more than one
recording device is used. For example when one ADC-system records
3 ecg-leads and one bloodpressure channel and another system
records 12 eeg-leeds, the measurement consists of one top
recording with two sub-recordings. The first sub-recording
contains 4 channels (3 ecg and 1 bloodpressure channel) and the second
sub-recording contains 12 channels (12 eeg channels). 
</para>
</listitem>
</varlistentry>


<varlistentry><term>Evaluation</term>
<listitem>
<para>
The results of an analysis (e.g. detection of qrs-complexes in ecg's)
are stored in an evaluation. An evaluation contains zero or more
discrete events (like 'occurence of a qrs-complex') and/or zero or more continous
events (like 'time interval with noise'). 
</para>
</listitem>
</varlistentry>

<varlistentry><term>Event</term>
<listitem>
<para>
An event describes the occurence of something in a recording (e.g. a
heartbeat in an ecg). An event has one or more event-properties.
</para>
</listitem>
</varlistentry>

<varlistentry><term>Event-Property</term>
<listitem>
<para>
An event-property is a specific property of the event (e.g. the position
of the event, the type of the event). A specific event-property is
allowed only once in an evaluation, for example there can be not more than one
'qrs-position' property.
</para>
</listitem>
</varlistentry>

<varlistentry><term>Event-Set</term>
<listitem>
<para>
An event-set describes a group of event-properties. For example the
event-set 'heartbeat' contains all properties which belongs to a heart
beat (like position of qrs-complex, RR interval, type of qrs-complex,
systolic bloodpressure).
</para>
</listitem>
</varlistentry>

<varlistentry><term>Plugins</term>
<listitem>
<para>
libRASCH makes heavy use of plugins. Plugins are small "programs" which
are loaded when libRASCH is initialized. In the plugins the real work is
done, the library-code coordinates that the correct plugin is used and
does some other administrative tasks.

In libRASCH exits three principal types of plugins: 
<itemizedlist mark=bullet>
<listitem><para>signal plugins</para></listitem>
<listitem><para>view plugins</para></listitem>
<listitem><para>process plugins</para></listitem>
</itemizedlist>
</para>

<varlistentry><term>Access-Plugin</term>
<listitem>
<para>
Access plugins handle the access to measurement files. They hide
the differences of the various types of formats and offer
an consistent interface to the measurements<footnote>
<para>
The signal plugins can be compared with device drivers in operating
systems.
</para></footnote>. Most of the times, the direct usage of
access-plugins with the libRASCH-API is not needed.
</para>
</listitem>
</varlistentry>

<varlistentry><term>Process-Plugin</term>
<listitem>
<para>
Process plugins perform a specifc task on the measurement (e.g. the
HRT-plugin calculates the Heart-Rate Turbulence parameters for an
ecg or the detect plugin performs a simple beat detection in ecg's).
The usage of these plugins 
</para>
</listitem>
</varlistentry>

<varlistentry><term>View-Plugin</term>
<listitem>
<para>
View plugins allow to display the measurements on the screen. If you
develop a program using a graphical user interface (GUI) all you need
to display signals is to call the apropriate plugin. At the moment the
following GUI's are supported:
<itemizedlist mark=bullet>
<listitem><para>Qt from Trolltech (for Linux)</para></listitem>
<listitem><para>MFC from Microsoft (for Windows)</para></listitem>
</itemizedlist>
</para>
</listitem>
</varlistentry>

</variablelist>

</section>

</chapter>
